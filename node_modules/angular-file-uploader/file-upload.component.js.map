{"version":3,"file":"file-upload.component.js","sourceRoot":"","sources":["../src/file-upload.component.ts"],"names":[],"mappings":"OAAO,EAAE,SAAS,EAAU,KAAK,EAAE,MAAM,EAAE,YAAY,EAAoC,MAAM,eAAe;AAEhH;IAgCE;QA/BC,WAAM,GAAQ,EAAE,CAAC;QACjB,gBAAW,GAAY,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAClD,gBAAW,GAAG,IAAI,YAAY,EAAE,CAAC;QAclC,WAAM,GAAW,CAAC,IAAI,IAAI,EAAE,CAAC;QAC7B,QAAG,GAAW,iBAAiB,CAAC;QAChC,kBAAa,GAAe,EAAE,CAAC;QAC/B,mBAAc,GAAkB,EAAE,CAAC;QACnC,YAAO,GAAkB,EAAE,CAAC;QAC5B,eAAU,GAAG,IAAI,CAAC;QAClB,oBAAe,GAAG,KAAK,CAAC;QACxB,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;QAClB,gBAAW,GAAG,KAAK,CAAC;QACpB,gBAAW,GAAG,IAAI,CAAC;QAMjB,8BAA8B;QAC9B,sCAAsC;QACtC,6BAA6B;IAC/B,CAAC;IAED,yCAAW,GAAX,UAAY,GAAkB;QAC5B,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACxC,IAAI,CAAC,EAAE;gBACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;oBACjB,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,KAAK,CAAC;YAC3C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,KAAK,CAAC;YAC/D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,KAAK,CAAC;YACzD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC;YAC3D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC;YACjD,IAAI,CAAC,cAAc;gBACjB,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,sCAAsC,CAAC;YAC1E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC;YACjD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACzD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,+BAA+B,CAAC;QAKvF,CAAC;QAED,EAAE,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,CAAC;QACH,CAAC;IACH,CAAC;IAED,sCAAQ,GAAR;QACE,+BAA+B;QAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,6CAAe,GAAf;QACE,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,sCAAQ,GAAR,UAAS,KAAU;QACjB,kEAAkE;QAClE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,8BAA8B;QAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC;QACD,sBAAsB;QACtB,4DAA4D;QAC5D,uBAAuB;QACvB,IAAI,YAAiB,CAAC;QACtB,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;QACjE,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC;QACnC,sDAAsD;QACtD,iDAAiD;QAEjD,wBAAwB;QACxB,IAAI,IAAe,CAAC;QACpB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;YACzB,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC;YACpD,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC9B,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,cAAmB,CAAC;QACxB,IAAI,GAAQ,CAAC;QACb,IAAI,WAAoB,CAAC;QACzB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACrC,cAAc;YACd,wBAAwB;YACxB,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC7C,cAAc,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;YACnC,4BAA4B;YAC5B,WAAW,GAAG,KAAK,CAAC;YACpB,6BAA6B;YAC7B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,YAAY,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxC,yDAAyD;gBACzD,EAAE,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC;oBACtB,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;gBAChD,CAAC,CAAC,cAAc;gBAChB,EAAE,CAAC,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtD,WAAW,GAAG,IAAI,CAAC;gBACrB,CAAC;YACH,CAAC;YAED,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBAChB,gCAAgC;gBAChC,YAAY;gBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC;oBAC1C,qDAAqD;oBACrD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;wBACvB,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;wBACtB,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;wBACxC,QAAQ,EAAE,cAAc;qBACzB,CAAC,CAAC;oBACH,QAAQ,CAAC;gBACX,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,qEAAqE;oBACrE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnC,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,oCAAoC;gBACpC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;oBACvB,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;oBACtB,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBACxC,QAAQ,EAAE,gBAAgB;iBAC3B,CAAC,CAAC;gBACH,QAAQ,CAAC;YACX,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,WAAW,CAAC;gBAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,yCAAW,GAAX;QACE,kCAAkC;QADpC,iBAuFC;QApFC,IAAI,CAAM,CAAC;QACX,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,OAAO,GAAG,KAAK,CAAC;QAEpB,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QAC/B,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAE9B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC;gBAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;YAC3D,qBAAqB;YACrB,QAAQ,CAAC,MAAM,CACb,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EACf,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,gCAAgC,CACvD,CAAC;QAEJ,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC;QAED,GAAG,CAAC,kBAAkB,GAAG,UAAA,IAAI;YAC3B,yBAAyB;YACzB,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBACvB,kDAAkD;oBAClD,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAGtC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,2BAA2B;oBAC3B,iDAAiD;oBACjD,OAAO,GAAG,IAAI,CAAC;oBACf,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,KAAI,CAAC,aAAa,GAAG,iBAAiB,CAAC;oBACvC,KAAI,CAAC,cAAc,GAAG,kBAAkB,CAAC;gBAG3C,CAAC;YACH,CAAC;QACH,CAAC,CAAC;QAEF,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,UAAA,IAAI;YAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAC1B,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;YACpE,CAAC;YACD,2DAA2D;QAC7D,CAAC,CAAC;QAEF,GAAG,CAAC,MAAM,GAAG,UAAA,IAAI;YACf,wBAAwB;YACxB,oBAAoB;YACpB,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACb,KAAI,CAAC,aAAa,GAAG,yBAAyB,CAAC;gBAC/C,KAAI,CAAC,cAAc,GAAG,mBAAmB,CAAC;YAE5C,CAAC;QACH,CAAC,CAAC;QAEF,GAAG,CAAC,OAAO,GAAG,UAAA,IAAI;YAChB,yBAAyB;YACzB,oBAAoB;QACtB,CAAC,CAAC;QAEF,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACvC,GAAG,CAAC,CAAc,UAAyB,EAAzB,KAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAzB,cAAyB,EAAzB,IAAyB,CAAC;YAAvC,IAAM,GAAG,SAAA;YACZ,yCAAyC;YACzC,GAAG,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;SAC9C;QACD,8CAA8C;QAC9C,mEAAmE;QACnE,2DAA2D;QAC3D,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,wCAAU,GAAV,UAAW,CAAM,EAAE,KAAU;QAC3B,yCAAyC;QACzC,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;IACH,CAAC;IAED,yCAAW,GAAX,UAAY,QAAgB;QAC1B,qCAAqC;QACrC,MAAM,CAAC,QAAQ,GAAG,OAAO;cACrB,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK;cACpC,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IAC9C,CAAC;IAED,8CAAgB,GAAhB;QACE,+BAA+B;QAC/B,QAAQ,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAE,CAAC,KAAK,EAAE,CAAC;QAClD,+BAA+B;IACjC,CAAC;IAED,kCAAI,GAAJ,UAAK,KAAU;QACb,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IACD,uCAAS,GAAT,UAAU,KAAW;QACnB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;QACvC,kCAAkC;IACpC,CAAC;IACI,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,uBAAuB;oBACjC,QAAQ,EAAE,09IA6EX;oBACC,MAAM,EAAE;wBACN,uqCA+DH;qBACE;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,kCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,kCAAc,GAA2C;QAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC5B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACjC,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KACjC,CAAC;IACF,0BAAC;AAAD,CAAC,AAvcD,IAucC","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, Inject } from '@angular/core';\r\n\r\nexport class FileUploadComponent implements OnInit, OnChanges {\r\n   config: any = {};\r\n   resetUpload: boolean = this.config[\"resetUpload\"];\r\n   ApiResponse = new EventEmitter();\r\n\r\n  theme: string;\r\n  id: number;\r\n  hideProgressBar: boolean;\r\n  maxSize: number;\r\n  uploadAPI: string;\r\n  formatsAllowed: string;\r\n  multiple: boolean;\r\n  headers: any;\r\n  hideResetBtn: boolean;\r\n  hideSelectBtn: boolean;\r\n  attachPinText: string;\r\n\r\n  idDate: number = +new Date();\r\n  reg: RegExp = /(?:\\.([^.]+))?$/;\r\n  selectedFiles: Array<any> = [];\r\n  notAllowedList: Array<Object> = [];\r\n  Caption: Array<string> = [];\r\n  singleFile = true;\r\n  progressBarShow = false;\r\n  uploadBtn = false;\r\n  uploadMsg = false;\r\n  afterUpload = false;\r\n  uploadClick = true;\r\n  uploadMsgText: string;\r\n  uploadMsgClass: string;\r\n  percentComplete: number;\r\n\r\n  constructor() {\r\n    //console.log(\"id: \",this.id);\r\n    //console.log(\"idDate: \",this.idDate);\r\n    //console.log(Math.random());\r\n  }\r\n\r\n  ngOnChanges(rst: SimpleChanges) {\r\n    if (rst[\"config\"]) {\r\n      this.theme = this.config[\"theme\"] || \"\";\r\n      this.id =\r\n        this.config[\"id\"] ||\r\n        parseInt((this.idDate / 10000).toString().split(\".\")[1]) +\r\n          Math.floor(Math.random() * 20) * 10000;\r\n      this.hideProgressBar = this.config[\"hideProgressBar\"] || false;\r\n      this.hideResetBtn = this.config[\"hideResetBtn\"] || false;\r\n      this.hideSelectBtn = this.config[\"hideSelectBtn\"] || false;\r\n      this.maxSize = this.config[\"maxSize\"] || 20;\r\n      this.uploadAPI = this.config[\"uploadAPI\"][\"url\"];\r\n      this.formatsAllowed =\r\n        this.config[\"formatsAllowed\"] || \".jpg,.png,.pdf,.docx,.txt,.gif,.jpeg\";\r\n      this.multiple = this.config[\"multiple\"] || false;\r\n      this.headers = this.config[\"uploadAPI\"][\"headers\"] || {};\r\n      this.attachPinText = this.config[\"attachPinText\"] || \"Attach supporting documents..\";\r\n      //console.log(\"config: \", this.config);\r\n      //console.log(this.config[\"maxSize\"]);\r\n      //console.log(this.headers);\r\n      //console.log(\"rst: \", rst);\r\n    }\r\n\r\n    if (rst[\"resetUpload\"]) {\r\n      if (rst[\"resetUpload\"].currentValue === true) {\r\n        this.resetFileUpload();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    //console.log(\"Id: \", this.id);\r\n    this.resetUpload = false;\r\n  }\r\n\r\n  resetFileUpload() {\r\n    this.selectedFiles = [];\r\n    this.Caption = [];\r\n    this.notAllowedList = [];\r\n    this.uploadMsg = false;\r\n    this.uploadBtn = false;\r\n  }\r\n\r\n  onChange(event: any) {\r\n    //console.log(this.maxSize + this.formatsAllowed + this.multiple);\r\n    this.notAllowedList = [];\r\n    //console.log(\"onchange hit\");\r\n    if (this.afterUpload || !this.multiple) {\r\n      this.selectedFiles = [];\r\n      this.Caption = [];\r\n      this.afterUpload = false;\r\n    }\r\n    //FORMATS ALLOWED LIST\r\n    //console.log(\"FORMATS ALLOWED LIST= \"+this.formatsAllowed);\r\n    //NO OF FORMATS ALLOWED\r\n    let formatsCount: any;\r\n    formatsCount = this.formatsAllowed.match(new RegExp(\"\\\\.\", \"g\"));\r\n    formatsCount = formatsCount.length;\r\n    //console.log(\"NO OF FORMATS ALLOWED= \"+formatsCount);\r\n    //console.log(\"-------------------------------\");\r\n\r\n    //ITERATE SELECTED FILES\r\n    let file : FileList;\r\n    if (event.type == \"drop\") {\r\n      file = event.dataTransfer.files;\r\n      console.log(\"type: drop\");\r\n    } else {\r\n      file = event.target.files || event.srcElement.files;\r\n      console.log(\"type: change\");\r\n    }\r\n    console.log(file);\r\n    let currentFileExt: any;\r\n    let ext: any;\r\n    let frmtAllowed: boolean;\r\n    for (let i = 0; i < file.length; i++) {\r\n      //CHECK FORMAT\r\n      //CURRENT FILE EXTENSION\r\n      currentFileExt = this.reg.exec(file[i].name);\r\n      currentFileExt = currentFileExt[1];\r\n      //console.log(file[i].name);\r\n      frmtAllowed = false;\r\n      //FORMAT ALLOWED LIST ITERATE\r\n      for (let j = formatsCount; j > 0; j--) {\r\n        ext = this.formatsAllowed.split(\".\")[j];\r\n        //console.log(\"FORMAT LIST (\"+j+\")= \"+ext.split(\",\")[0]);\r\n        if (j == formatsCount) {\r\n          ext = this.formatsAllowed.split(\".\")[j] + \",\";\r\n        } //check format\r\n        if (currentFileExt.toLowerCase() == ext.split(\",\")[0]) {\r\n          frmtAllowed = true;\r\n        }\r\n      }\r\n\r\n      if (frmtAllowed) {\r\n        //console.log(\"FORMAT ALLOWED\");\r\n        //CHECK SIZE\r\n        if (file[i].size > this.maxSize * 1024000) {\r\n          //console.log(\"SIZE NOT ALLOWED (\"+file[i].size+\")\");\r\n          this.notAllowedList.push({\r\n            fileName: file[i].name,\r\n            fileSize: this.convertSize(file[i].size),\r\n            errorMsg: \"Invalid size\"\r\n          });\r\n          continue;\r\n        } else {\r\n          //format allowed and size allowed then add file to selectedFile array\r\n          this.selectedFiles.push(file[i]);\r\n        }\r\n      } else {\r\n        //console.log(\"FORMAT NOT ALLOWED\");\r\n        this.notAllowedList.push({\r\n          fileName: file[i].name,\r\n          fileSize: this.convertSize(file[i].size),\r\n          errorMsg: \"Invalid format\"\r\n        });\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (this.selectedFiles.length !== 0) {\r\n      this.uploadBtn = true;\r\n      if (this.theme == \"attachPin\") this.uploadFiles();\r\n    } else {\r\n      this.uploadBtn = false;\r\n    }\r\n    this.uploadMsg = false;\r\n    this.uploadClick = true;\r\n    this.percentComplete = 0;\r\n    event.target.value = null;\r\n  }\r\n\r\n  uploadFiles() {\r\n    //console.log(this.selectedFiles);\r\n\r\n    let i: any;\r\n    this.progressBarShow = true;\r\n    this.uploadClick = false;\r\n    this.notAllowedList = [];\r\n    let isError = false;\r\n\r\n    let xhr = new XMLHttpRequest();\r\n    let formData = new FormData();\r\n\r\n    for (i = 0; i < this.selectedFiles.length; i++) {\r\n      if (this.Caption[i] == undefined) this.Caption[i] = \"file\";\r\n      //Add DATA TO BE SENT\r\n      formData.append(\r\n        this.Caption[i],\r\n        this.selectedFiles[i] /*, this.selectedFiles[i].name*/\r\n      );\r\n      //console.log(this.selectedFiles[i]+\"{\"+this.Caption[i]+\" (Caption)}\");\r\n    }\r\n\r\n    if (i > 1) {\r\n      this.singleFile = false;\r\n    } else {\r\n      this.singleFile = true;\r\n    }\r\n\r\n    xhr.onreadystatechange = evnt => {\r\n      //console.log(\"onready\");\r\n      if (xhr.readyState === 4) {\r\n        if (xhr.status === 200) {\r\n          //this.ApiResponse.emit(JSON.parse(xhr.response));\r\n          this.ApiResponse.emit(xhr.response);\r\n          //console.log( \" (From SERVER)\");\r\n          //console.log(evnt);\r\n        } else {\r\n          //console.log(\"ERRRRRRor\");\r\n          //console.log(xhr.statusText + \" (From SERVER)\");\r\n          isError = true;\r\n          this.progressBarShow = false;\r\n          this.uploadBtn = false;\r\n          this.uploadMsg = true;\r\n          this.afterUpload = true;\r\n          this.uploadMsgText = \"Upload Failed !\";\r\n          this.uploadMsgClass = \"text-danger lead\";\r\n          //console.log(this.uploadMsgText);\r\n          //console.log(evnt);\r\n        }\r\n      }\r\n    };\r\n\r\n    xhr.upload.onprogress = evnt => {\r\n      if (evnt.lengthComputable) {\r\n        this.percentComplete = Math.round(evnt.loaded / evnt.total * 100);\r\n      }\r\n      //console.log(\"Progress...\"/*+this.percentComplete+\" %\"*/);\r\n    };\r\n\r\n    xhr.onload = evnt => {\r\n      //console.log(\"onload\");\r\n      //console.log(evnt);\r\n      this.progressBarShow = false;\r\n      this.uploadBtn = false;\r\n      this.uploadMsg = true;\r\n      this.afterUpload = true;\r\n      if (!isError) {\r\n        this.uploadMsgText = \"Successfully Uploaded !\";\r\n        this.uploadMsgClass = \"text-success lead\";\r\n        //console.log(this.uploadMsgText + \" \" + this.selectedFiles.length + \" file\");\r\n      }\r\n    };\r\n\r\n    xhr.onerror = evnt => {\r\n      //console.log(\"onerror\");\r\n      //console.log(evnt);\r\n    };\r\n\r\n    xhr.open(\"POST\", this.uploadAPI, true);\r\n    for (const key of Object.keys(this.headers)) {\r\n      // Object.keys will give an Array of keys\r\n      xhr.setRequestHeader(key, this.headers[key]);\r\n    }\r\n    //let token = sessionStorage.getItem(\"token\");\r\n    //xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n    //xhr.setRequestHeader('Authorization', `Bearer ${token}`);\r\n    xhr.send(formData);\r\n  }\r\n\r\n  removeFile(i: any, sf_na: any) {\r\n    //console.log(\"remove file clicked \" + i)\r\n    if (sf_na == \"sf\") {\r\n      this.selectedFiles.splice(i, 1);\r\n      this.Caption.splice(i, 1);\r\n    } else {\r\n      this.notAllowedList.splice(i, 1);\r\n    }\r\n\r\n    if (this.selectedFiles.length == 0) {\r\n      this.uploadBtn = false;\r\n    }\r\n  }\r\n\r\n  convertSize(fileSize: number) {\r\n    //console.log(fileSize + \" - \"+ str);\r\n    return fileSize < 1024000\r\n      ? (fileSize / 1024).toFixed(2) + \" KB\"\r\n      : (fileSize / 1024000).toFixed(2) + \" MB\";\r\n  }\r\n\r\n  attachpinOnclick() {\r\n    //console.log(\"ID: \", this.id);\r\n    document.getElementById(\"sel\" + this.id)!.click();\r\n    //$(\"#\"+\"sel\"+this.id).click();\r\n  }\r\n\r\n  drop(event: any) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    console.log(\"drop: \", event);\r\n    console.log(\"drop: \", event.dataTransfer.files);\r\n    this.onChange(event);\r\n  }\r\n  allowDrop(event : any) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"copy\";\r\n    //console.log(\"allowDrop: \",event)\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: \"angular-file-uploader\",\r\n  template: `<div class=\"container\" *ngIf=\"(theme !== 'attachPin')\" id=\"default\">\r\n  <div *ngIf=\"theme == 'dragNDrop'\" id=\"dragNDrop\" [ngClass]=\"(hideSelectBtn && hideResetBtn) ? null : 'dragNDropBtmPad'\">\r\n    <div style=\"position:relative;\">\r\n      <div id=\"div1\" (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\">\r\n        <p>Drag N Drop</p>\r\n      </div>\r\n      <!-- <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span> -->\r\n    </div>\r\n  </div>\r\n    <label for=\"sel{{id}}\" class=\"btn btn-primary btn-sm\" *ngIf=\"!hideSelectBtn\">Select File<span *ngIf=\"multiple\">s</span></label>\r\n    <input type=\"file\" id=\"sel{{id}}\" style=\"display: none\" *ngIf=\"!hideSelectBtn\" (change)=\"onChange($event)\" title=\"Select file\" name=\"files[]\" [accept]=formatsAllowed\r\n        [attr.multiple]=\"multiple ? '' : null\" />\r\n    <button class=\"btn btn-info btn-sm\" (click)=\"resetFileUpload()\" *ngIf=\"!hideResetBtn\">Reset</button>\r\n    <br *ngIf=\"!hideSelectBtn\">\r\n    <p class=\"constraints-info\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize *1024000))}}</p>\r\n    <!--Selected file list-->\r\n    <div class=\"row\" *ngFor=\"let sf of selectedFiles;let i=index\">\r\n        <p class=\"col-xs-3 textOverflow\">\r\n            <span class=\"text-primary\">{{sf.name}}</span>\r\n        </p>\r\n        <p class=\"col-xs-3 padMarg sizeC\">\r\n            <strong>({{convertSize(sf.size)}})</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n        <!--  <input class=\"col-xs-3 progress caption\"  type=\"text\"  placeholder=\"Caption..\"  [(ngModel)]=\"Caption[i]\"  *ngIf=\"uploadClick\"/> -->\r\n        <div class=\"progress col-xs-3 padMarg\" *ngIf=\"singleFile && progressBarShow && !hideProgressBar\">\r\n            <span class=\"progress-bar progress-bar-success\" role=\"progressbar\" [ngStyle]=\"{'width':percentComplete+'%'}\">{{percentComplete}}%</span>\r\n        </div>\r\n        <a class=\"col-xs-1\" role=\"button\" (click)=\"removeFile(i,'sf')\" *ngIf=\"uploadClick\"><i class=\"fa fa-times\"></i></a>\r\n    </div>\r\n    <!--Invalid file list-->\r\n    <div class=\"row text-danger\" *ngFor=\"let na of notAllowedList;let j=index\">\r\n        <p class=\"col-xs-3 textOverflow\">\r\n            <span>{{na['fileName']}}</span>\r\n        </p>\r\n        <p class=\"col-xs-3 padMarg sizeC\">\r\n            <strong>({{na['fileSize']}})</strong>\r\n        </p>\r\n        <p class=\"col-xs-3 \">{{na['errorMsg']}}</p>\r\n        <a class=\"col-xs-1 delFileIcon\" role=\"button\" (click)=\"removeFile(j,'na')\" *ngIf=\"uploadClick\">&nbsp;<i class=\"fa fa-times\"></i></a>\r\n    </div>\r\n\r\n    <p *ngIf=\"uploadMsg\" class=\"{{uploadMsgClass}}\">{{uploadMsgText}}<p>\r\n    <div *ngIf=\"!singleFile && progressBarShow && !hideProgressBar\">\r\n        <div class=\"progress col-xs-4 padMarg\">\r\n            <span class=\"progress-bar progress-bar-success\" role=\"progressbar\" [ngStyle]=\"{'width':percentComplete+'%'}\">{{percentComplete}}%</span>\r\n        </div>\r\n        <br>\r\n        <br>\r\n    </div>\r\n    <button class=\"btn btn-success\" type=\"button\" (click)=\"uploadFiles()\" [disabled]=!uploadBtn>Upload</button>\r\n    <br>\r\n</div>\r\n\r\n<!--/////////////////////////// ATTACH PIN THEME  //////////////////////////////////////////////////////////-->\r\n<div *ngIf=\"theme == 'attachPin'\" id=\"attachPin\">\r\n    <div style=\"position:relative;padding-left:6px\">\r\n        <a class='btn up_btn' (click)=\"attachpinOnclick()\">\r\n            {{attachPinText}}\r\n            <i class=\"fa fa-paperclip\" aria-hidden=\"true\"></i>\r\n            <!-- <p style=\"margin-top:10px\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize * 1024000))}}</p> -->\r\n            <input type=\"file\" id=\"sel{{id}}\" (change)=\"onChange($event)\" style=\"display: none\" title=\"Select file\" name=\"files[]\" [accept]=formatsAllowed\r\n                [attr.multiple]=\"multiple ? '' : null\" />\r\n            <br>\r\n        </a>\r\n        &nbsp;\r\n        <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span>\r\n    </div>\r\n</div>\r\n\r\n<!--/////////////////////////// DRAG N DROP THEME  //////////////////////////////////////////////////////////-->\r\n<!-- <div *ngIf=\"theme == 'dragNDrop'\" id=\"dragNDrop\">\r\n  <div style=\"position:relative;padding-left:6px\">\r\n    <div id=\"div1\" (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\">\r\n      <p>Drag N Drop</p>\r\n    </div>\r\n    <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span>\r\n  </div>\r\n</div> -->\r\n`,\r\n  styles: [\r\n    `.constraints-info{\r\n    margin-top:10px;\r\n    font-style: italic;\r\n}\r\n.padMarg{\r\n    padding: 0px;\r\n    margin-bottom:0px;\r\n}\r\n.caption{\r\n    margin-right:5px;\r\n}\r\n.textOverflow{\r\n    white-space: nowrap;\r\n    padding-right: 0;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n}\r\n.up_btn{\r\n    color: black;\r\n    background-color: transparent;\r\n    border: 2px solid rgb(92, 91, 91);\r\n    border-radius: 22px;\r\n}\r\n.delFileIcon{\r\n  text-decoration: none;\r\n  color:#ce0909;\r\n}\r\n/*--------------------- DRAG N DROP ----------------------*/\r\n#dragNDrop #div1{\r\n  display: border-box;\r\n  border: 2px dashed rgb(92, 91, 91);\r\n  height: 6rem;\r\n  width: 20rem;\r\n}\r\n#dragNDrop #div1>p{\r\n  text-align: center;\r\n  font-weight: bold;\r\n  color: rgb(92, 91, 91);\r\n  margin-top: 1.4em;\r\n}\r\n\r\n.dragNDropBtmPad {\r\n  padding-bottom: 2rem;\r\n}\r\n/*--------------------- X-X-X-X ----------------------*/\r\n@media screen and (max-width: 620px){\r\n    .caption{\r\n        padding: 0;\r\n    }\r\n}\r\n@media screen and (max-width: 510px){\r\n    .sizeC{\r\n        width:25%;\r\n    }\r\n}\r\n@media screen and (max-width: 260px){\r\n    .sizeC{\r\n        font-size:10px;\r\n    }\r\n    .caption{\r\n        font-size:10px;\r\n    }\r\n}\r\n`\r\n  ]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'config': [{ type: Input },],\n'resetUpload': [{ type: Input },],\n'ApiResponse': [{ type: Output },],\n};\n}\r\n\r\n/* interface CONFIG {\r\n  uploadAPI: string;\r\n  multiple?: boolean;\r\n  formatsAllowed?: string;\r\n  maxSize?: number;\r\n  id?: number;\r\n  resetUpload?: boolean;\r\n  theme?: string;\r\n  hideProgressBar?: boolean;\r\n }\r\n */\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}